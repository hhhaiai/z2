name: Build and Publish Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - arch: amd64
            suffix: -amd64
            platform: linux/amd64
          - arch: arm64
            suffix: -arm64
            platform: linux/arm64
          - arch: amd64
            suffix: ''
            platform: linux/amd64 # 默认镜像

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup QEMU for cross-platform
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: image=moby/buildkit:latest

    - name: Extract version and debug info
      id: version
      run: |
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Extracted version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Generate Docker Metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ghcr.io/${{ github.repository }}${{ matrix.suffix }}
        tags: |
          type=raw,value=latest
          type=raw,value=${{ env.VERSION }}
          type=sha,prefix=sha-,format=short

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.platform }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true

    - name: Build Result Summary
      if: always()
      run: |
        echo "Platform: ${{ matrix.platform }}"
        echo "Generated tags: ${{ steps.meta.outputs.tags }}"
